datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id           Int       @id @default(autoincrement())
  nom          String
  postnom      String
  prenom       String
  email        String    @unique
  telephone    String?
  adresse      String?
  photoProfile String?
  passwordHash String
  role         String    @default("candidat")
  createdAt    DateTime  @default(now())

  candidatures Candidature[]
  messagesSent Message[] @relation("sentMessages")
  messagesRecv Message[] @relation("recvMessages")

  // Relations agent - users
  assignedAgent AgentAssignment?  @relation("UserAgent")   // si ce user est assigné à un agent
  receivedUsers AgentAssignment[] @relation("AgentUser")   // si ce user est agent
}

model Candidature {
  id             Int      @id @default(autoincrement())
  user           User     @relation(fields: [userId], references: [id])
  userId         Int
  statut         String   @default("en_attente")
  paiementOnline Boolean  @default(false)
  paiementCash   Boolean  @default(false)
  datePostule    DateTime @default(now())
}

model AgentAssignment {
  id         Int   @id @default(autoincrement())
  userId     Int   @unique
  user       User  @relation("UserAgent", fields: [userId], references: [id])
  agentId    Int
  agent      User  @relation("AgentUser", fields: [agentId], references: [id])
  dateAssign DateTime @default(now())
}

model Message {
  id        Int   @id @default(autoincrement())
  sender    User  @relation("sentMessages", fields: [senderId], references: [id])
  senderId  Int
  receiver  User  @relation("recvMessages", fields: [receiverId], references: [id])
  receiverId Int
  message   String
  createdAt DateTime @default(now())
}

model Log {
  id        Int      @id @default(autoincrement())
  action    String
  actorId   Int
  targetId  Int?
  createdAt DateTime @default(now())
}

